{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","location","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3e1bab1.chunk.js","sourcesContent":["function Square(props) {\r\n// merender sebuah button\r\n  return (\r\n    <button \r\n      className='square' \r\n      onClick={props.onClick}  \r\n    >\r\n      {props.value} \r\n    </button>   \r\n    // menampilkan nilai(data) yang dioper oleh Board\r\n  )\r\n}\r\n\r\nexport default Square;\r\n\r\n// documentation : \r\n// state yang awalnya di Square component telah dinaikan ke Board component. code sebelumnya :\r\n// ..\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             value: null,\r\n//         };\r\n//     }\r\n\r\n//     ..\r\n// ..\r\n\r\n// karena menggunakan function components, this.props dirubah menjadi props. code sebelumnya :\r\n// ..\r\n//     ..\r\n\r\n//     render() {\r\n//         return (\r\n//             <button\r\n//                 className=\"square\"\r\n//                 onClick={() => this.setState({value: 'X'})}\r\n//             >\r\n//                 {this.state.value}\r\n//             </button>\r\n//         );\r\n//     }\r\n// ..\r\n// Awalnya, kita mengoperkan prop value dari Board untuk menampilkan angka 0 sampai 8 di setiap Square. \r\n// Namun Pada langkah ini kita menggantikan angka dengan “X” yang ditentukan oleh state dari Square itu sendiri. \r\n// Sehingga Square saat ini mengabaikan prop value yang dioperkan oleh Board.\r\n\r\n// Square component cukup menggunakan function components, karena  \r\n// hanya berisi render method dan tidak memiliki state lagi. code sebelumnya :\r\n// class Square extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             value: null,\r\n//         };\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <button\r\n//                  className=\"square\"\r\n//                  onClick={() => this.setState({value: 'X'})}\r\n//             >\r\n//                  {this.state.value}\r\n//             </button>\r\n//         );\r\n//     }\r\n// }\r\n","import React from 'react';\r\nimport Square from './Square'\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return <Square \r\n      value={this.props.squares[i]} \r\n      onClick={() => this.props.onClick(i)}\r\n    />; \r\n    // mengoper data prop value & prop onClick ke Square Component\r\n  }\r\n\r\n  render() {\r\n  // merender 9 Square\r\n    return (\r\n      <div className='board'>\r\n        <div className='board-row'>\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className='board-row'>\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className='board-row'>\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Board;\r\n\r\n// documentation : \r\n// state dari Board telah dinaikan ke Game component. sebelumnya :\r\n// ..\r\n//     constructor(props) {\r\n//       super(props);\r\n//       this.state = {\r\n//         squares: Array(9).fill(null),\r\n//       };\r\n//     }\r\n\r\n//     ..\r\n// ..\r\n\r\n// renderSquare(i) method sebelumnya :\r\n// ..\r\n//     ..\r\n\r\n//     renderSquare(i) {\r\n//         return <Square value={i} />;\r\n//     }\r\n\r\n//     ..\r\n// ..\r\n\r\n// lalu menjadi :\r\n// ..\r\n//     ..\r\n\r\n//     renderSquare(i) {\r\n//         return (\r\n//             <Square\r\n//                 value={this.state.squares[i]} \r\n                // prop value sekarang membawa state\r\n//                 onClick={() => this.handleClick(i)}\r\n                // Karena state dianggap sebagai private di dalam suatu komponen, \r\n                // kita tidak dapat mengubah state Board melalui Square secara langsung. Harus melalui Board.\r\n                // Sehingga kita memberi Fungsi ini. Agar dipanggil ketika komponen Square diklik. \r\n//             />\r\n//         );\r\n//     }\r\n\r\n//     ..\r\n// ..\r\n\r\n// di Board component sebelumnya terdapat fungsi handleClick(), kemudian dinaikan ke Game. code sebelumnya :\r\n// ..\r\n//     ..\r\n\r\n//     handleClick(i) {\r\n//         const squares = this.state.squares.slice();\r\n        // slice() digunakan utk menerapkan immutability\r\n//         squares[i] = 'X';\r\n//         this.setState({squares: squares});\r\n//     }\r\n\r\n//     ..\r\n// ..\r\n\r\n// constructor pada Board dirubah menjadi :\r\n// ..\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             squares: Array(9).fill(null),\r\n//             xIsNext: true, // untuk menentukan siapa yang akan membuat langkah selanjutnya\r\n//         };\r\n//     }\r\n// ..\r\n\r\n// fungsi handleClick dirubah menjadi :\r\n// ..\r\n//     ..\r\n    \r\n//     handleClick(i) {\r\n//         const squares = this.state.squares.slice();\r\n//         squares[i] = this.state.xIsNext ? 'X' : 'O'; \r\n//         this.setState({\r\n//             squares: squares,\r\n//             xIsNext: !this.state.xIsNext,\r\n//         });\r\n//     }\r\n\r\n//     ..\r\n// ..\r\n\r\n// seluruh code pada Board component sebelumnya :\r\n// class Board extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             squares: Array(9).fill(null),\r\n//             xIsNext: true,\r\n//         };\r\n//     }\r\n\r\n//     handleClick(i) {\r\n//         const squares = this.state.squares.slice();\r\n//         squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n//         this.setState({\r\n//             squares: squares,\r\n//             xIsNext: !this.state.xIsNext,\r\n//         });\r\n//     }\r\n\r\n//     renderSquare(i) {\r\n//         return (\r\n//             <Square\r\n//             value={this.state.squares[i]}\r\n//             onClick={() => this.handleClick(i)}\r\n//             />\r\n//         );\r\n//     }\r\n\r\n//     render() {\r\n//         const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    \r\n//         return (\r\n//             <div>\r\n//             <div className=\"status\">{status}</div>\r\n//             <div className=\"board-row\">\r\n//                 {this.renderSquare(0)}\r\n//                 {this.renderSquare(1)}\r\n//                 {this.renderSquare(2)}\r\n//             </div>\r\n//             <div className=\"board-row\">\r\n//                 {this.renderSquare(3)}\r\n//                 {this.renderSquare(4)}\r\n//                 {this.renderSquare(5)}\r\n//             </div>\r\n//             <div className=\"board-row\">\r\n//                 {this.renderSquare(6)}\r\n//                 {this.renderSquare(7)}\r\n//                 {this.renderSquare(8)}\r\n//             </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n","import React from 'react';\r\nimport Board from './Board';\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null), \r\n        // state dari Game berisi array dengan 9 null\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const locations = [\r\n      [1,1],\r\n      [2,1],\r\n      [3,1],\r\n      [1,2],\r\n      [2,2],\r\n      [3,2],\r\n      [1,3],\r\n      [2,3],\r\n      [3,3]\r\n    ]\r\n\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if(calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n        location: locations[i]\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    })\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n  // merender sebuah Board\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => { \r\n      const desc = move ?\r\n        'Go to move #' + move + \"@\" + history[move].location:\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>\r\n            {move === this.state.stepNumber ? <b>{desc}</b> : desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n        \r\n    let status;\r\n    if(winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n      status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className='game'>\r\n        <h1>Tic Tac Toe</h1>\r\n        <div className='game-board'>\r\n          <Board \r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className='game-info'>\r\n          <h1>{status}</h1>\r\n          <div className=\"history\">\r\n            <h1>History</h1>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for(let i=0; i<lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default Game;\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport Game from './components/Game'\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}