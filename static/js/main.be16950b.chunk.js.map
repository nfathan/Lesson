{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"yOAWeA,MAXf,SAAgBC,GACZ,OACI,wBACIC,UAAU,SACVC,QAASF,EAAME,QAFnB,SAIKF,EAAMG,SC4BJC,E,kKA9BX,SAAaC,GAAI,IAAD,OACZ,OAAO,cAAC,EAAD,CACHF,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAI1C,WACI,OACI,sBAAKJ,UAAU,QAAf,UACI,sBAAKA,UAAU,YAAf,UACKK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAEvB,sBAAKP,UAAU,YAAf,UACKK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAEvB,sBAAKP,UAAU,YAAf,UACKK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GAxBnBC,IAAMC,WC6E1B,SAASC,EAAgBJ,GAWrB,IAVA,IAAMK,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEHP,EAAE,EAAGA,EAAEO,EAAMC,OAAQR,IAAK,CAC9B,kBAAkBO,EAAMP,GAAxB,GAAOS,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAGT,EAAQO,IAAMP,EAAQO,KAAOP,EAAQQ,IAAMR,EAAQO,KAAOP,EAAQS,GACjE,OAAOT,EAAQO,GAGvB,OAAO,KAGIG,M,kDAhGX,WAAYjB,GAAQ,IAAD,8BACf,cAAMA,IACDkB,MAAQ,CACTC,QAAS,CAAC,CACNZ,QAASa,MAAM,GAAGC,KAAK,QAE3BC,WAAY,EACZC,SAAS,GAPE,E,+CAWnB,SAAYlB,GACR,IAAMc,EAAUb,KAAKY,MAAMC,QAAQK,MAAM,EAAGlB,KAAKY,MAAMI,WAAa,GAE9Df,EADUY,EAAQA,EAAQN,OAAS,GACjBN,QAAQiB,QAC7Bb,EAAgBJ,IAAYA,EAAQF,KAIvCE,EAAQF,GAAKC,KAAKY,MAAMK,QAAU,IAAM,IACxCjB,KAAKmB,SAAS,CACVN,QAASA,EAAQO,OAAO,CAAC,CACrBnB,QAASA,KAEbe,WAAYH,EAAQN,OACpBU,SAAUjB,KAAKY,MAAMK,a,oBAI7B,SAAOI,GACHrB,KAAKmB,SAAS,CACVH,WAAYK,EACZJ,QAAUI,EAAO,IAAO,M,oBAIhC,WAAU,IAgBFC,EAhBC,OACCT,EAAUb,KAAKY,MAAMC,QACrBU,EAAUV,EAAQb,KAAKY,MAAMI,YAC7BQ,EAASnB,EAAgBkB,EAAQtB,SAEjCwB,EAAQZ,EAAQa,KAAI,SAACL,EAAMM,GAC7B,IAAMC,EAAOD,EACT,eAAiBA,EACjB,mBACJ,OACI,6BACI,wBAAQ/B,QAAS,kBAAM,EAAKiC,OAAOF,IAAnC,SAA2CC,KADtCD,MAajB,OALIL,EADDE,EACU,WAAaA,EAEb,iBAAmBxB,KAAKY,MAAMK,QAAU,IAAM,KAIvD,sBAAKtB,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,EAAD,CACIM,QAASsB,EAAQtB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAK+B,YAAY/B,QAGzC,sBAAKJ,UAAU,YAAf,UACI,8BAAM2B,IACN,6BAAKG,c,GAtENtB,IAAMC,WCEzB2B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.be16950b.chunk.js","sourcesContent":["function Square(props) {\r\n    return (\r\n        <button \r\n            className='square' \r\n            onClick={props.onClick}  \r\n        >\r\n            {props.value} \r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square'\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return <Square \r\n            value={this.props.squares[i]} \r\n            onClick={() => this.props.onClick(i)}\r\n        />;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='board'>\r\n                <div className='board-row'>\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className='board-row'>\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className='board-row'>\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport Board from './Board'\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if(calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        })\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => { \r\n            const desc = move ?\r\n                'Go to move #' + move :\r\n                'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n            \r\n        let status;\r\n        if(winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n            status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n            <div className='game'>\r\n                <div className='game-board'>\r\n                    <Board \r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className='game-info'>\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for(let i=0; i<lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default Game;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport Game from './components/Game'\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}